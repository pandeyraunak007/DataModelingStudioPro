// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  projects      Project[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map(name: "users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map(name: "accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map(name: "sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map(name: "verification_tokens")
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  version     String   @default("1.0")
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  entities    Entity[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map(name: "projects")
}

model Entity {
  id           String      @id @default(cuid())
  name         String
  x            Float       @default(0)
  y            Float       @default(0)
  width        Float       @default(180)
  height       Float       @default(120)
  type         EntityType  @default(ENTITY)
  projectId    String
  project      Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)
  attributes   Attribute[]
  fromRelations Relationship[] @relation("FromEntity")
  toRelations   Relationship[] @relation("ToEntity")
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  @@map(name: "entities")
}

model Attribute {
  id           String  @id @default(cuid())
  name         String
  dataType     String
  isPrimaryKey Boolean @default(false)
  isForeignKey Boolean @default(false)
  isNullable   Boolean @default(true)
  defaultValue String?
  entityId     String
  entity       Entity  @relation(fields: [entityId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map(name: "attributes")
}

model Relationship {
  id              String           @id @default(cuid())
  name            String
  type            RelationshipType @default(ONE_TO_MANY)
  fromCardinality String           @default("1")
  toCardinality   String           @default("*")
  fromEntityId    String
  toEntityId      String
  fromEntity      Entity           @relation("FromEntity", fields: [fromEntityId], references: [id], onDelete: Cascade)
  toEntity        Entity           @relation("ToEntity", fields: [toEntityId], references: [id], onDelete: Cascade)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  @@map(name: "relationships")
}

enum EntityType {
  ENTITY
  VIEW
  TABLE
}

enum RelationshipType {
  ONE_TO_ONE
  ONE_TO_MANY
  MANY_TO_MANY
}